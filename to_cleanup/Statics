Opcodes/fm4op.c:static int      FM_tabs_built = 0;
Opcodes/fm4op.c:static MYFLT    FM4Op_gains[100];
Opcodes/fm4op.c:static MYFLT    FM4Op_susLevels[16];
Opcodes/fm4op.c:static MYFLT    FM4Op_attTimes[32];

Opcodes/sfont.c:static SFBANK *soundFont;
Opcodes/sfont.c:static SFBANK sfArray[MAX_SFONT];
Opcodes/sfont.c:static int currSFndx = 0;
Opcodes/sfont.c:static presetType *presetp[MAX_SFPRESET];
Opcodes/sfont.c:static SHORT *sampleBase[MAX_SFPRESET];
Opcodes/sfont.c:static MYFLT pitches[128];
Opcodes/sfont.c:static char *Gfname;
Opcodes/sfont.c:static void

SDIF/sdif.c:static char *error_string_array[] = {
SDIF/sdif.c:    static int id;
SDIF/sdif.c:static  char    p[BUFSIZE];
SDIF/sdif.c:    static char errorMessage[sizeof("sizeof(sdif_float64) is 999!!!")];
SDIF/sdif-mem.c:static void *(*my_malloc)(int numBytes);
SDIF/sdif-mem.c:static void (*my_free)(void *memory, int numBytes);

Top/cscorfns.c:static INFILE *infiles = NULL;    /* array of infile status blks */
Top/cscorfns.c:static  EVENT  *evtmp = NULL;
Top/cscorfns.c:static  EVTBLK *evtmpblk;
Top/cscorfns.c:static SPACE  spaceanchor = { { NULL, NULL, TYP_SPACE, 0 }, NULL };
Top/cscorfns.c:static CSHDR  *nxtfree = NULL;   /* fast pointer to yet unused free space */
Top/cscorfns.c:static EVENT  *nxtevt = NULL;    /* to hold nxt infil event, PMAX pfields */
Top/cscorfns.c:static EVTBLK *nxtevtblk;        /* cs.h EVTBLK subset of EVENT nxtevt    */
Top/cscorfns.c:static int    warpout = 0;
Top/cscorfns.c:static MYFLT curuntil;           /* initialised to zero by filopen */
Top/cscorfns.c:static int   wasend;             /* ditto */
Top/cscorfns.c:static void

Top/csmodule.c:    static char errstr[ERR_STR_LEN];
Top/csmodule.c:    static int err_filled = 0;
Top/csmodule.c:    static int (*make_private_module_public) (NSModule module) = NULL;

