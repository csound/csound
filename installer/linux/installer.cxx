// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "installer.h"

Fl_Output *bintype=(Fl_Output *)0;

Fl_Check_Button *systemp=(Fl_Check_Button *)0;

Fl_File_Input *bindir=(Fl_File_Input *)0;

Fl_File_Input *opcdir=(Fl_File_Input *)0;

Fl_File_Input *doc=(Fl_File_Input *)0;

Fl_File_Input *libdir=(Fl_File_Input *)0;

Fl_File_Input *hdrdir=(Fl_File_Input *)0;

Fl_File_Input *locdir=(Fl_File_Input *)0;

Fl_Progress *progress=(Fl_Progress *)0;

static void cb_INSTALL(Fl_Button*, void*) {
  do_install = 1;
}

static void cb_ABORT(Fl_Button*, void*) {
  exit(0);
}

Fl_Check_Button *doBin=(Fl_Check_Button *)0;

Fl_Check_Button *doOpc=(Fl_Check_Button *)0;

Fl_Check_Button *doDoc=(Fl_Check_Button *)0;

Fl_Check_Button *doLib=(Fl_Check_Button *)0;

Fl_Check_Button *doHdr=(Fl_Check_Button *)0;

Fl_Check_Button *doLoc=(Fl_Check_Button *)0;

Fl_Double_Window* make_window(char* type) {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(370, 390, "Csound5 Installer");
    w = o;
    { Fl_Text_Display* o = new Fl_Text_Display(85, 30, 25, 25, "Csound5 Installer for");
      o->box(FL_NO_BOX);
      o->labelfont(9);
      o->labelsize(20);
    }
    { Fl_Output* o = bintype = new Fl_Output(185, 6, 170, 30);
      o->box(FL_NO_BOX);
      o->labelfont(1);
      o->labelsize(20);
      o->textfont(9);
      o->textsize(20);
      bintype->value(type);
    }
    { Fl_Check_Button* o = systemp = new Fl_Check_Button(265, 45, 25, 25, "Install in System Files");
      o->down_box(FL_DOWN_BOX);
      o->callback((Fl_Callback*)set_system);
      o->align(FL_ALIGN_LEFT);
    }
    bindir = new Fl_File_Input(90, 75, 235, 30, "Binary");
    opcdir = new Fl_File_Input(90, 115, 235, 30, "Opcodes");
    doc = new Fl_File_Input(90, 155, 235, 30, "Manual");
    libdir = new Fl_File_Input(90, 195, 235, 30, "Libraries");
    hdrdir = new Fl_File_Input(90, 235, 235, 30, "Headers");
    locdir = new Fl_File_Input(90, 275, 235, 30, "Locales");
    progress = new Fl_Progress(150, 350, 210, 30);
    { Fl_Button* o = new Fl_Button(10, 320, 70, 60, "INSTALL");
      o->color((Fl_Color)1);
      o->labelfont(9);
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_INSTALL);
    }
    { Fl_Button* o = new Fl_Button(90, 335, 50, 45, "ABORT");
      o->color((Fl_Color)10);
      o->labelfont(9);
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_ABORT);
    }
    { Fl_Check_Button* o = doBin = new Fl_Check_Button(10, 80, 25, 25);
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = doOpc = new Fl_Check_Button(10, 120, 25, 25);
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = doDoc = new Fl_Check_Button(10, 160, 25, 25);
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = doLib = new Fl_Check_Button(10, 200, 25, 25);
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = doHdr = new Fl_Check_Button(10, 235, 25, 25);
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = doLoc = new Fl_Check_Button(10, 280, 25, 25);
      o->down_box(FL_DOWN_BOX);
    }
    o->end();
  }
  return w;
}

Fl_Output *err_text=(Fl_Output *)0;

static void cb_OK(Fl_Return_Button*, void*) {
  end_alert = 1;
}

Fl_Double_Window* make_alert() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(345, 75, "Installer Alert");
    w = o;
    o->color((Fl_Color)1);
    o->labelcolor(FL_BACKGROUND2_COLOR);
    { Fl_Output* o = err_text = new Fl_Output(5, 10, 310, 25);
      o->color((Fl_Color)1);
      o->textcolor(7);
    }
    { Fl_Return_Button* o = new Fl_Return_Button(5, 45, 50, 25, "OK");
      o->color((Fl_Color)1);
      o->callback((Fl_Callback*)cb_OK);
    }
    o->end();
  }
  return w;
}

Fl_Check_Button *do_asound=(Fl_Check_Button *)0;

Fl_Check_Button *do_fluidsynth=(Fl_Check_Button *)0;

Fl_Check_Button *do_jack=(Fl_Check_Button *)0;

Fl_Check_Button *do_lo=(Fl_Check_Button *)0;

Fl_Check_Button *do_portaudio=(Fl_Check_Button *)0;

Fl_Check_Button *do_sndfile=(Fl_Check_Button *)0;

static void cb_install(Fl_Button*, void*) {
  do_libinstall=1;
lib_exit=1;
}

static void cb_cancel(Fl_Button*, void*) {
  do_libinstall=0;
lib_exit=1;
}

Fl_Double_Window* make_libraries() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(255, 210);
    w = o;
    { Fl_Text_Display* o = new Fl_Text_Display(25, 25, 25, 25, "Optional Libraries Installation");
      o->box(FL_NO_BOX);
      o->labelfont(1);
      o->align(FL_ALIGN_TOP_LEFT);
    }
    { Fl_Check_Button* o = do_asound = new Fl_Check_Button(25, 50, 200, 20, "libasound");
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = do_fluidsynth = new Fl_Check_Button(25, 75, 200, 20, "libfluidsynth");
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = do_jack = new Fl_Check_Button(25, 100, 200, 25, "libjack");
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = do_lo = new Fl_Check_Button(25, 125, 200, 20, "liblo");
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = do_portaudio = new Fl_Check_Button(25, 150, 200, 20, "libportaudio");
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Check_Button* o = do_sndfile = new Fl_Check_Button(25, 175, 200, 20, "libsndfile");
      o->down_box(FL_DOWN_BOX);
    }
    { Fl_Button* o = new Fl_Button(25, 25, 55, 20, "install");
      o->callback((Fl_Callback*)cb_install);
    }
    { Fl_Button* o = new Fl_Button(175, 25, 55, 20, "cancel");
      o->callback((Fl_Callback*)cb_cancel);
    }
    o->end();
  }
  return w;
}
